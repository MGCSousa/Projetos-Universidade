#BlueJ class context
comment0.params=
comment0.target=UmerApp()
comment0.text=O\ construtor\ \u00E9\ privado,\ pois\ n\u00E3o\ queremos\ inst\u00E2ncias\ da\ mesma.
comment1.params=
comment1.target=void\ fazMenus()
comment1.text=\n\ Cria\ os\ diferentes\ menus\ da\ classe,\ conforme\ as\ op\u00E7\u00F5es\ desejadas.\n
comment10.params=
comment10.target=void\ top5DesviosMotoristas()
comment10.text=\ \n\ M\u00E9todo\ que\ trata\ de\ imprimir\ para\ o\ ecr\u00E3\ a\ Lista\ com\ os\ 5\ Motoristas\ com\n\ mais\ desvios\ no\ sistema.\n
comment11.params=
comment11.target=void\ totalFaturadoViatura()
comment11.text=\ \n\ M\u00E9todo\ que\ imprime\ no\ ecr\u00E3\ o\ total\ faturado\ por\ uma\ viatura\ num\n\ determinado\ per\u00EDodo.\n
comment12.params=
comment12.target=void\ top10ClientesMaiorGasto()
comment12.text=\ M\u00E9todo\ que\ trata\ de\ imprimir\ para\ o\ ecr\u00E3\ a\ Lista\ dos\ 10\ Clientes\ do\n\ sistema\ que\ mais\ dinheiro\ gastaram.\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment13.text=\ \n\ M\u00E9todo\ main\ da\ aplica\u00E7\u00E3o;\n\ Aqui\ \u00E9\ iniciada\ a\ aplica\u00E7\u00E3o,\ e\ apresentado\ no\ ecr\u00E3\ uma\ s\u00E9rie\ de\ op\u00E7\u00F5es\ as\n\ quais\ o\ Utilizador\ pode\ selecionar;\n\ \u00C9\ devolvida\ tamb\u00E9m\ uma\ excep\u00E7\u00E3o\ se\ n\u00E3o\ for\ poss\u00EDvel\ guardar\ o\ estado\ da\n\ aplica\u00E7\u00E3o\ num\ ficheiro.\n
comment14.params=
comment14.target=void\ carregarTestes()
comment14.text=\ \n\ M\u00E9todo\ auxiliar\ que\ cria\ uma\ s\u00E9rie\ de\ objetos\ para\ servir\ de\ teste\ na\n\ aplica\u00E7\u00E3o;\ Estes\ objetos\ s\u00E3o,\ depois\ de\ criados,\ inseridos\ na\ base\ de\n\ dados,\ de\ forma\ a\ poderem\ ser\ utilizador\ quando\ a\ aplica\u00E7\u00E3o\ \u00E9\ iniciada.\n
comment2.params=
comment2.target=void\ carregarDados()
comment2.text=\n\ Carrega\ os\ dados\ para\ a\ aplica\u00E7\u00E3o.\n
comment3.params=
comment3.target=void\ guardarDados()
comment3.text=\ \n\ Guarda\ os\ dados\ da\ aplica\u00E7\u00E3o\ em\ ficheiro.\n
comment4.params=user
comment4.target=void\ getInfoViagensComDatas(Actor)
comment4.text=\ \n\ Imprime\ no\ ecr\u00E3\ uma\ Lista\ de\ Viagens\ de\ um\ certo\ Actor,\ entre\ determinadas\ datas.\n\ @param\ user\n
comment5.params=
comment5.target=void\ iniciarSessao()
comment5.text=\ \n\ Menu\ de\ in\u00EDcio\ de\ sess\u00E3o,\ que\ conforme\ o\ utilizador,\ executa\ o\ Menu\ de\n\ Cliente\ ou\ o\ Menu\ de\ Motorista;\ Se\ os\ dados\ de\ um\ certo\ utilizador\ n\u00E3o\n\ corresponderem\ com\ o\ que\ est\u00E1\ na\ base\ de\ dados,\ \u00E9\ imprimida\ uma\ excep\u00E7\u00E3o\n\ e\ o\ utilizador\ \u00E9\ devolvido\ ao\ Menu\ Inicial.\ \n
comment6.params=c
comment6.target=void\ fazerViagem(Cliente)
comment6.text=\ \n\ M\u00E9todo\ que\ executa\ uma\ viagem\ para\ um\ certo\ Cliente;\ \n\ Aqui\ o\ Cliente\ tem\ diferentes\ op\u00E7\u00F5es\ em\ rela\u00E7\u00E3o\ \u00E0\ sua\ viagem;\ \n\ Se\ este\ Cliente\ j\u00E1\ estiver\ em\ alguma\ Lista\ de\ Reservas,\ n\u00E3o\ \u00E9\ poss\u00EDvel\ realizar\ a\ viagem;\n\ Conforma\ a\ op\u00E7\u00E3o\ do\ Cliente,\ ele\ pode\ escolher\ reservar\ um\ lugar\ num\n\ certo\ T\u00E1xi,\ se\ este\ tiver\ essa\ op\u00E7\u00E3o,\ ou\ fazer\ logo\ a\ viagem.\n\ @param\ c\n
comment7.params=
comment7.target=void\ criarUtilizador()
comment7.text=\n\ M\u00E9todo\ que\ cria\ um\ Utilizador\ novo\ no\ sistema;\n\ Este\ utilizador\ \u00E9\ depois\ colocado\ na\ Lista\ de\ Actores\ do\ sistema.\n
comment8.params=
comment8.target=void\ criarTaxi()
comment8.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ Viatura\ nova\ no\ sistema;\n\ Esta\ viatura\ \u00E9\ depois\ colocada\ na\ Lista\ de\ Viaturas\ do\ sistema.\n
comment9.params=
comment9.target=void\ adicionarMotorista_Viatura()
comment9.text=\ \n\ M\u00E9todo\ que\ adiciona\ um\ determinado\ motorista\ selecionado\ pelo\ utilizador,\n\ a\ uma\ Viatura\ presente\ no\ sistema.\n
numComments=15
